[{"C:\\Users\\User\\Desktop\\hw_react\\hw-6\\src\\index.js":"1","C:\\Users\\User\\Desktop\\hw_react\\hw-6\\src\\App.js":"2","C:\\Users\\User\\Desktop\\hw_react\\hw-6\\src\\components\\NewExpenses\\NewExpenses.js":"3","C:\\Users\\User\\Desktop\\hw_react\\hw-6\\src\\components\\Expenses\\Expenses.jsx":"4","C:\\Users\\User\\Desktop\\hw_react\\hw-6\\src\\components\\NewExpenses\\ExpenseForm.js":"5","C:\\Users\\User\\Desktop\\hw_react\\hw-6\\src\\components\\Expenses\\ExpensesChart.js":"6","C:\\Users\\User\\Desktop\\hw_react\\hw-6\\src\\components\\Expenses\\ExpensesList.js":"7","C:\\Users\\User\\Desktop\\hw_react\\hw-6\\src\\components\\UI\\Card.js":"8","C:\\Users\\User\\Desktop\\hw_react\\hw-6\\src\\components\\Expenses\\ExpensesFilter.jsx":"9","C:\\Users\\User\\Desktop\\hw_react\\hw-6\\src\\components\\Expenses\\ExpenseItem.js":"10","C:\\Users\\User\\Desktop\\hw_react\\hw-6\\src\\components\\Chart\\Chart.js":"11","C:\\Users\\User\\Desktop\\hw_react\\hw-6\\src\\components\\Expenses\\ExpenseDate.js":"12","C:\\Users\\User\\Desktop\\hw_react\\hw-6\\src\\components\\Chart\\ChartBar.js":"13","C:\\Users\\User\\Desktop\\hw_react\\hw-6\\src\\components\\NewExpenses\\HideExpenseForm.js":"14","C:\\Users\\User\\Desktop\\hw_react\\hw-6\\src\\components\\UI\\SuccsesAlert.jsx":"15","C:\\Users\\User\\Desktop\\hw_react\\hw-6\\src\\components\\UI\\ErrorAlert.jsx":"16"},{"size":176,"mtime":1642395532000,"results":"17","hashOfConfig":"18"},{"size":4239,"mtime":1645366857564,"results":"19","hashOfConfig":"18"},{"size":1473,"mtime":1645286208357,"results":"20","hashOfConfig":"18"},{"size":2074,"mtime":1645282343340,"results":"21","hashOfConfig":"18"},{"size":3044,"mtime":1645529359733,"results":"22","hashOfConfig":"18"},{"size":2712,"mtime":1642875873597,"results":"23","hashOfConfig":"18"},{"size":2576,"mtime":1645282862124,"results":"24","hashOfConfig":"18"},{"size":605,"mtime":1645353412685,"results":"25","hashOfConfig":"18"},{"size":1156,"mtime":1642872947309,"results":"26","hashOfConfig":"18"},{"size":629,"mtime":1642875947030,"results":"27","hashOfConfig":"18"},{"size":916,"mtime":1642876113312,"results":"28","hashOfConfig":"18"},{"size":555,"mtime":1645281566786,"results":"29","hashOfConfig":"18"},{"size":964,"mtime":1642876362976,"results":"30","hashOfConfig":"18"},{"size":200,"mtime":1645085677250,"results":"31","hashOfConfig":"18"},{"size":463,"mtime":1645353710284,"results":"32","hashOfConfig":"18"},{"size":626,"mtime":1645354237914,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"19ave33",{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"C:\\Users\\User\\Desktop\\hw_react\\hw-6\\src\\index.js",[],["69","70"],"C:\\Users\\User\\Desktop\\hw_react\\hw-6\\src\\App.js",["71"],"import React, { useCallback, useEffect, useState } from 'react'\r\nimport Expenses from './components/Expenses/Expenses'\r\nimport NewExpenses from './components/NewExpenses/NewExpenses'\r\nimport SuccsesAlert from './components/UI/SuccsesAlert'\r\nimport ErrorAlert from './components/UI/ErrorAlert'\r\n\r\nconst INIT_DATA = [\r\n\t// {\r\n\t// \tid: 'e1',\r\n\t// \ttitle: 'Toilet Paper',\r\n\t// \tamount: 94.12,\r\n\t// \tdate: new Date(2022, 7, 14),\r\n\t// },\r\n\t// {\r\n\t// \tid: 'e3',\r\n\t// \ttitle: 'Car Insurance',\r\n\t// \tamount: 294.67,\r\n\t// \tdate: new Date(2023, 2, 28),\r\n\t// },\r\n\t// {\r\n\t// \tid: 'e4',\r\n\t// \ttitle: 'New Desk (Wooden)',\r\n\t// \tamount: 450,\r\n\t// \tdate: new Date(2024, 5, 12),\r\n\t// },\r\n] // Это массив который будет отоброжаться по умолчанию\r\n\r\n// этот компонент получает данные от дочерних компонентов и добовляет его в свой пропс (точнее в массив чтоб в дольнейшем сообщать браузеру что если стейт обновиться реакту нужно обновляться)\r\nconst App = () => {\r\n\tconst [expenses, setExpenses] = useState([])\r\n\tconst [loading, setLoading] = useState(false)\r\n\tconst [succsesAlert, setSuccsesAlert] = useState(null)\r\n\tconst [errorAlert, setErrorAlert] = useState(null)\r\n\tconst [postError, setPostError] = useState(null)\r\n\r\n\t//стейт который содержит default ные значения но в дольнейшем этот стейт будет обновлять список (коротко говоря стейт который товечает за  отоброжения данных которые в массиве и которые присоеденяться в массив  )\r\n\tconst GetData = useCallback(async () => {\r\n\t\tsetLoading(true)\r\n\t\ttry {\r\n\t\t\tconst response = await fetch(\r\n\t\t\t\t'https://expense-tracker-f2bd2-default-rtdb.firebaseio.com/item.json',\r\n\t\t\t)\r\n\t\t\tif (!response.ok) {\r\n\t\t\t\treturn new Error('somthing went wrong')\r\n\t\t\t}\r\n\t\t\tconst data = await response.json()\r\n\r\n\t\t\tlet loadingData = []\r\n\r\n\t\t\tfor (const key in data) {\r\n\t\t\t\tloadingData.push({\r\n\t\t\t\t\tid: data[key].id,\r\n\t\t\t\t\ttitle: data[key].title,\r\n\t\t\t\t\tamount: data[key].amount,\r\n\t\t\t\t\tdate: new Date(data[key].date),\r\n\t\t\t\t})\r\n\t\t\t}\r\n\r\n\t\t\tsetExpenses(loadingData)\r\n\t\t\tsetLoading(false)\r\n\t\t} catch (error) {\r\n\t\t\tsetErrorAlert(error.message)\r\n\t\t}\r\n\t}, [])\r\n\r\n\tuseEffect(() => {\r\n\t\tGetData()\r\n\t}, [GetData])\r\n\r\n\tconst NewExpensesData = async (newData) => {\r\n\t\ttry {\r\n\t\t\tconst response = await fetch(\r\n\t\t\t\t'https://expense-tracker-f2bd2-default-rtdb.firebaseio.com/item.json',\r\n\t\t\t\t{\r\n\t\t\t\t\tmethod: 'POST',\r\n\t\t\t\t\tbody: JSON.stringify(newData),\r\n\t\t\t\t\tHeaders: {\r\n\t\t\t\t\t\t'Content-type': 'application/json',\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t)\r\n\t\t\tif (!response.ok) {\r\n\t\t\t\tthrow new Error('failed to send data')\r\n\t\t\t}\r\n\t\t\tconst result = await response.json()\r\n\t\t\tGetData()\r\n\t\t\tsetSuccsesAlert({ message: 'data added successfully' })\r\n\t\t\tconsole.log(result)\r\n\t\t} catch (error) {\r\n\t\t\tsetPostError(error.message)\r\n\t\t}\r\n\t}\r\n\r\n\t// функция которая получает данные из newExpenses и добовляет его в стейт (expenses) с помошью функции (setExpenses) стейта который обновляет стейт(сообщает реакт что стейт обновился) она получает данные с помошью поднятия данных(lifting up )\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{succsesAlert && (\r\n\t\t\t\t<SuccsesAlert\r\n\t\t\t\t\tsuccsesAlert={succsesAlert}\r\n\t\t\t\t\tsetSuccsesAlert={setSuccsesAlert}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t\t{errorAlert && (\r\n\t\t\t\t<ErrorAlert\r\n\t\t\t\t\terrorAlert={errorAlert}\r\n\t\t\t\t\tsetErrorAlert={setErrorAlert}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t\t{postError && <ErrorAlert\r\n\t\t\t\t\terrorAlert={postError}\r\n\t\t\t\t\tsetErrorAlert={setPostError}\r\n\t\t\t\t/>}\r\n\t\t\t<NewExpenses newData={NewExpensesData} />\r\n\t\t\t{/*тут мы отдаем с помощью пропсов функция которая поднимает данные */}\r\n\t\t\t<Expenses loading={loading} items={expenses} />{' '}\r\n\t\t\t{/* тут мы отдаем стейт для дольнейшей обработки данных */}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default App\r\n","C:\\Users\\User\\Desktop\\hw_react\\hw-6\\src\\components\\NewExpenses\\NewExpenses.js",[],"C:\\Users\\User\\Desktop\\hw_react\\hw-6\\src\\components\\Expenses\\Expenses.jsx",[],"C:\\Users\\User\\Desktop\\hw_react\\hw-6\\src\\components\\NewExpenses\\ExpenseForm.js",[],"C:\\Users\\User\\Desktop\\hw_react\\hw-6\\src\\components\\Expenses\\ExpensesChart.js",[],"C:\\Users\\User\\Desktop\\hw_react\\hw-6\\src\\components\\Expenses\\ExpensesList.js",["72"],"import './ExpensesList.css'\r\nimport ExpenseItem from './ExpenseItem'\r\nimport CircularProgress from '@mui/material/CircularProgress'\r\nimport Box from '@mui/material/Box'\r\n\r\n// Этот компонент отвечает за корректное выведение фильтрованного массива с помошью обычного условног оператора и компонента ExpensesITEM <= (ЭТО САМА КАРТОЧКА )\r\n\r\nconst ExpensesList = ({\r\n\texpenses,\r\n\tfilteredExpenses,\r\n\tfilteredYear,\r\n\tloading,\r\n}) => {\r\n\tconsole.log(loading)\r\n\tlet expensesContent = (\r\n\t\t<h2 className='expenses-list__fallback'>No Expense Found</h2>\r\n\t) // сначала в переменную мы кладем обычный jsx code поому что jsx это обычное js вырожение\r\n\tif (filteredExpenses.length > 0) {\r\n\t\t// мы даем условие если длинна отфильтрованного массива больше нуля то тогда сделай верстку и перезапиши это все в пременную выше\r\n\t\texpensesContent = filteredExpenses.map((element) => {\r\n\t\t\treturn (\r\n\t\t\t\t<ExpenseItem\r\n\t\t\t\t\tkey={Math.random()}\r\n\t\t\t\t\ttitle={element.title}\r\n\t\t\t\t\tamount={element.amount}\r\n\t\t\t\t\tdate={element.date}\r\n\t\t\t\t/> // компонент который делает карточки из массива  все происходит с помошью метода map()\r\n\t\t\t)\r\n\t\t})\r\n\t}\r\n\tif (loading) {\r\n\t\texpensesContent = (\r\n\t\t\t<div className='loading'>\r\n\t\t\t\t<Box sx={{ display: 'flex' }}>\r\n\t\t\t\t\t<CircularProgress />\r\n\t\t\t\t</Box>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\tif (filteredYear == 'all' && expenses.length > 0) {\r\n\t\t// а тут мы даем условие если значение select === \"all\" и длинна самого массива больше 0 то есть если в нем что то есть) то выведи нам все что есть в массиве(и сохрани этот код в переменной expensesContent (перезапиши))\r\n\t\texpensesContent = expenses.map((element) => {\r\n\t\t\treturn (\r\n\t\t\t\t<ExpenseItem\r\n\t\t\t\t\tkey={Math.random()}\r\n\t\t\t\t\ttitle={element.title}\r\n\t\t\t\t\tamount={element.amount}\r\n\t\t\t\t\tdate={element.date}\r\n\t\t\t\t/>\r\n\t\t\t)\r\n\t\t})\r\n\t}\r\n\r\n\t// а если наши условиия не выполняться в наш expenses list попадеть default ное значение expensesContent\r\n\treturn <ul className='expenses-list'>{expensesContent}</ul> // тут наш код выводитьсяс\r\n}\r\n\r\nexport default ExpensesList\r\n","C:\\Users\\User\\Desktop\\hw_react\\hw-6\\src\\components\\UI\\Card.js",[],"C:\\Users\\User\\Desktop\\hw_react\\hw-6\\src\\components\\Expenses\\ExpensesFilter.jsx",[],"C:\\Users\\User\\Desktop\\hw_react\\hw-6\\src\\components\\Expenses\\ExpenseItem.js",[],"C:\\Users\\User\\Desktop\\hw_react\\hw-6\\src\\components\\Chart\\Chart.js",[],"C:\\Users\\User\\Desktop\\hw_react\\hw-6\\src\\components\\Expenses\\ExpenseDate.js",[],"C:\\Users\\User\\Desktop\\hw_react\\hw-6\\src\\components\\Chart\\ChartBar.js",[],"C:\\Users\\User\\Desktop\\hw_react\\hw-6\\src\\components\\NewExpenses\\HideExpenseForm.js",[],"C:\\Users\\User\\Desktop\\hw_react\\hw-6\\src\\components\\UI\\SuccsesAlert.jsx",[],"C:\\Users\\User\\Desktop\\hw_react\\hw-6\\src\\components\\UI\\ErrorAlert.jsx",[],{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":7,"column":7,"nodeType":"79","messageId":"80","endLine":7,"endColumn":16},{"ruleId":"81","severity":1,"message":"82","line":40,"column":19,"nodeType":"83","messageId":"84","endLine":40,"endColumn":21},"no-native-reassign",["85"],"no-negated-in-lhs",["86"],"no-unused-vars","'INIT_DATA' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]